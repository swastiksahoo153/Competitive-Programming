    #include <bits/stdc++.h>
    using namespace std;
    #define pb push_back
     
    int r,c;  
    int arr[1001][1001];
    int vis[1001][1001]; 
     
    int bfs(int x,int y){
        int mx=0;
        queue<pair<int,int>> q;
        q.push(make_pair(x,y));
        vis[x][y]=1;
        while(!q.empty()){
            pair<int,int> cur=q.front();
            // cout<<cur.first<<" "<<cur.second<<endl;
            q.pop();
            for(int i=-1;i<=1;i++){
                for(int j=-1;j<=1;j++){
                    if((cur.first+i)<0 || (cur.first+i)>=r || (cur.second+j)<0 || (cur.second+j)>=c) continue;
                    if(!vis[cur.first+i][cur.second+j] && arr[cur.first+i][cur.second+j]){
                        // cout<<cur.first<<" "<<cur.second<<endl;
                        vis[cur.first+i][cur.second+j]=1;
                        q.push(make_pair(cur.first+i,cur.second+j));
                        mx++;
                    }
                }
            }
        }
        return mx;
    }
     
    int main(){
        int t; cin>>t;
        while(t--){
            memset(arr,0,sizeof(arr));
            memset(vis,0,sizeof(vis));
            cin>>r>>c;
            for(int i=0;i<r;i++){
                for(int j=0;j<c;j++){
                    cin>>arr[i][j];
                }
            }
            
            int ct=0,mx=0;
            
            for(int i=0;i<r;i++){
                for(int j=0;j<c;j++){
                    if(arr[i][j]==1 && !vis[i][j]){
                        mx=max(mx,bfs(i,j));
                        ct++;
                    }
                    vis[i][j]=1;
                }
            }
            if(mx==0) cout<<ct<<" "<<0<<endl;
            else cout<<ct<<" "<<mx+1<<endl;
            
        }
    }
